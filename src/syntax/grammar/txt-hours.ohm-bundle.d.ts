// AUTOGENERATED FILE
// This file was generated from txt-hours.ohm by `ohm generateBundles`.

import {
  BaseActionDict,
  Grammar,
  IterationNode,
  Node,
  NonterminalNode,
  Semantics,
  TerminalNode
} from 'ohm-js';

export interface TXTHoursActionDict<T> extends BaseActionDict<T> {
  File?: (this: NonterminalNode, arg0: IterationNode) => T;
  Entry?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode, arg2: IterationNode, arg3: IterationNode) => T;
  Date?: (this: NonterminalNode, arg0: NonterminalNode, arg1: TerminalNode, arg2: NonterminalNode, arg3: TerminalNode, arg4: NonterminalNode) => T;
  Year?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode, arg2: NonterminalNode, arg3: NonterminalNode) => T;
  Month?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode) => T;
  Day?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode) => T;
  TimeEntry?: (this: NonterminalNode, arg0: NonterminalNode, arg1: TerminalNode, arg2: NonterminalNode, arg3: IterationNode) => T;
  TimeRange?: (this: NonterminalNode, arg0: NonterminalNode, arg1: TerminalNode, arg2: NonterminalNode) => T;
  Time?: (this: NonterminalNode, arg0: NonterminalNode, arg1: TerminalNode, arg2: NonterminalNode) => T;
  Hour?: (this: NonterminalNode, arg0: NonterminalNode, arg1: IterationNode) => T;
  Minute?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode) => T;
  TaskName?: (this: NonterminalNode, arg0: IterationNode) => T;
  newline?: (this: NonterminalNode, arg0: TerminalNode) => T;
}

export interface TXTHoursSemantics extends Semantics {
  addOperation<T>(name: string, actionDict: TXTHoursActionDict<T>): this;
  extendOperation<T>(name: string, actionDict: TXTHoursActionDict<T>): this;
  addAttribute<T>(name: string, actionDict: TXTHoursActionDict<T>): this;
  extendAttribute<T>(name: string, actionDict: TXTHoursActionDict<T>): this;
}

export interface TXTHoursGrammar extends Grammar {
  createSemantics(): TXTHoursSemantics;
  extendSemantics(superSemantics: TXTHoursSemantics): TXTHoursSemantics;
}

declare const grammar: TXTHoursGrammar;
export default grammar;

